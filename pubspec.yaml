name: task_manager
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.4.3 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.6
  firebase_core: ^3.10.1
  firebase_auth: ^5.4.1
  cloud_firestore: ^5.6.2
  shared_preferences: ^2.3.2
  flutter_bloc: ^8.1.6
  freezed_annotation: ^2.4.4
  google_sign_in: ^6.2.2
  injectable: ^2.5.0
  fluttertoast: ^8.2.8
  go_router: ^14.4.1
  get_it: ^8.0.2
  flutter_screenutil: ^5.9.3
  flutter_spinkit: ^5.2.1
  loader_overlay: ^4.0.3
  flutter_svg: ^2.0.14
  vector_graphics: ^1.1.14
  easy_sidemenu: ^0.6.0
  font_awesome_flutter: ^10.8.0
  gap: ^3.0.1
  fl_chart: ^0.69.0
  pie_chart: ^5.4.0
  percent_indicator: ^4.2.3
  uuid: ^4.5.1
  internet_connection_checker: ^1.0.0+1
  firebase_storage: ^12.3.6
  connectivity_plus: ^6.1.0
  flutter_secure_storage: ^4.2.1
  http: ^1.2.2
  firebase_analytics: ^11.3.5
  image_picker: ^1.1.2
  country_state_city_picker: ^1.2.8
  path: ^1.9.0
  nigerian_states_and_lga: ^1.0.0
  dropdown_button2: ^2.3.9
  file_picker: ^8.1.7
  permission_handler: ^11.3.1
  path_provider: ^2.1.5
  intl: ^0.20.1
  rxdart: ^0.28.0
  flutter_launcher_icons: ^0.14.2
  flutter_dotenv: ^5.2.1
  timezone: ^0.9.0

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
 
  flutter_lints: ^4.0.0
  build_runner:
  flutter_gen_runner:
  freezed: ^2.4.7
  json_serializable: ^6.7.1
  injectable_generator: ^2.4.1

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/
    - assets/images/
    - assets/icons/
    - assets/fonts/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: Barlow
      fonts:
        - asset: assets/fonts/Barlow-Regular.ttf
        - asset: assets/fonts/Barlow-Bold.ttf
          weight: 800
        - asset: assets/fonts/Barlow-Medium.ttf
          weight: 500
        - asset: assets/fonts/Barlow-Light.ttf
          weight: 200
        - asset: assets/fonts/Barlow-Thin.ttf
          weight: 100


flutter_gen:
  output: lib/gen/ # Optional (default: lib/gen/)
  line_length: 80 # Optional (default: 80)

  # Optional
  integrations:
    flutter_svg: true
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
